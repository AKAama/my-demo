# 3. API测试示例

## 创建模型
curl -X POST http://localhost:3000/api/v1/models \
-H "Content-Type: application/json" \
-d '{
"name": "GPT-4",
"endpoint": "https://api.openai.com/v1/chat/completions",
"api_key": "sk-xxxxxxxxxxxxxxxxxxxxxxxx",
"timeout": 30,
"type": "chat",
"dimension": 1536
}'

# 预期返回:
# {
#   "status": 200,
#   "data": {
#     "model_id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
#     "name": "GPT-4",
#     "endpoint": "https://api.openai.com/v1/chat/completions",
#     "api_key": "sk-xxxxxxxxxxxxxxxxxxxxxxxx",
#     "timeout": 30,
#     "type": "chat",
#     "dimension": 1536,
#     "created_at": "2025-06-28T18:30:00+08:00",
#     "updated_at": "2025-06-28T18:30:00+08:00"
#   },
#   "msg": ""
# }

## 获取模型列表
curl -X GET http://localhost:3000/api/v1/models

# 预期返回:
# {
#   "status": 200,
#   "data": [
#     {
#       "model_id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
#       "name": "GPT-4",
#       "endpoint": "https://api.openai.com/v1/chat/completions",
#       "api_key": "sk-xxxxxxxxxxxxxxxxxxxxxxxx",
#       "timeout": 30,
#       "type": "chat",
#       "dimension": 1536,
#       "created_at": "2025-06-28T18:30:00+08:00",
#       "updated_at": "2025-06-28T18:30:00+08:00"
#     }
#   ],
#   "msg": ""
# }

## 获取单个模型
curl -X GET http://localhost:3000/api/v1/models/f47ac10b-58cc-4372-a567-0e02b2c3d479

## 更新模型
curl -X PUT http://localhost:3000/api/v1/models/f47ac10b-58cc-4372-a567-0e02b2c3d479 \
-H "Content-Type: application/json" \
-d '{
"name": "GPT-4-Turbo",
"endpoint": "https://api.openai.com/v1/chat/completions",
"api_key": "sk-yyyyyyyyyyyyyyyyyyyyyyyy",
"timeout": 60,
"type": "chat",
"dimension": 1536
}'

## 删除模型
curl -X DELETE http://localhost:3000/api/v1/models/f47ac10b-58cc-4372-a567-0e02b2c3d479

# 预期返回:
# {
#   "status": 200,
#   "data": {
#     "message": "模型删除成功"
#   },
#   "msg": ""
# }

## 错误示例

### 创建重复名称的模型
curl -X POST http://localhost:3000/api/v1/models \
-H "Content-Type: application/json" \
-d '{
"name": "GPT-4",
"endpoint": "https://api.openai.com/v1/chat/completions",
"api_key": "sk-xxxxxxxxxxxxxxxxxxxxxxxx",
"timeout": 30,
"type": "chat",
"dimension": 1536
}'

# 预期返回:
# {
#   "status": 409,
#   "data": null,
#   "msg": "模型名称已存在"
# }

### 获取不存在的模型
curl -X GET http://localhost:3000/api/v1/models/non-existent-id

# 预期返回:
# {
#   "status": 404,
#   "data": null,
#   "msg": "模型不存在"
# }

### 参数验证错误
curl -X POST http://localhost:3000/api/v1/models \
-H "Content-Type: application/json" \
-d '{
"name": "",
"endpoint": "https://api.openai.com/v1/chat/completions"
}'

# 预期返回:
# {
#   "status": 400,
#   "data": null,
#   "msg": "参数错误: Key: 'Model.Name' Error:Field validation for 'Name' failed on the 'required' tag"
# }

# 数据库表结构（会自动创建）
# 表名: models
# 字段:
# - model_id: varchar(64) PRIMARY KEY (UUID)
# - name: varchar(255) NOT NULL UNIQUE
# - endpoint: varchar(255) NOT NULL
# - api_key: varchar(255) NOT NULL
# - timeout: int NOT NULL
# - type: varchar(255) NOT NULL
# - dimension: int NOT NULL
# - created_at: timestamp
# - updated_at: timestamp

# 日志输出示例
# 2025-06-28 18:30:00.123	DEBUG	database init finished...
# 2025-06-28 18:30:00.124	DEBUG	http server[:3000] 已经运行...
# 2025-06-28 18:30:15.234	INFO	成功创建模型: GPT-4, ID: f47ac10b-58cc-4372-a567-0e02b2c3d479
# 2025-06-28 18:30:20.345	INFO	查询到 1 个模型